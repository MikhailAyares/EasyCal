# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'searchfood.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from qty_dialog import QtyDialog as QtyDialog
import sqlite3
import os
from datetime import date

class Ui_searchfood(object):
    def setupUi(self, searchfood):

        base_dir = os.path.dirname(os.path.abspath(__file__))   # lokasi file searchfood.py
        db_path = os.path.join(base_dir, "..", "db", "food.db") # naik 1 folder → db → food.db
        self.conn = sqlite3.connect(db_path)
        self.cursor = self.conn.cursor()
        self.cursor.execute("""
            CREATE TABLE IF NOT EXISTS nutrisi (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT UNIQUE,
                calories REAL,
                protein REAL,
                fat REAL,
                carbohydrate REAL
            )
        """)
        self.cursor.execute("""
            CREATE TABLE IF NOT EXISTS meal_log (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                food_id INTEGER,
                grams REAL,
                date TEXT,
                FOREIGN KEY(food_id) REFERENCES nutrisi(id)
            )
        """)
        self.conn.commit()
        self.picked_item = {}

        searchfood.setObjectName("searchfood")
        searchfood.resize(512, 272)
        searchfood.setWindowIcon(QtGui.QIcon("Logokecil.png"))
        searchfood.setStyleSheet("background-color: rgb(254,251,234);")
        self.centralwidget = QtWidgets.QWidget(searchfood)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setStyleSheet("background-color: white;")
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.setPlaceholderText("Search Food...")
        self.gridLayout.addWidget(self.lineEdit, 0, 0, 1, 1)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setStyleSheet("QPushButton {\n"
"    background-color: rgb(111, 192, 195);\n"
"    color: white;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 173, 173);\n"
"}")
        self.pushButton.setObjectName("pushButton")
        self.gridLayout.addWidget(self.pushButton, 0, 1, 1, 1)
        self.gridLayout_2.addLayout(self.gridLayout, 1, 0, 1, 1)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Add_button = QtWidgets.QPushButton(self.centralwidget)
        self.Add_button.setStyleSheet("QPushButton {\n"
"    background-color: rgb(111, 192, 195);\n"
"    color: white;\n"
"}\n"
"QPushButton:disabled {"
"    background-color: rgb(180, 180, 180); "
"    color: rgb(220, 220, 220);            "
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 173, 173);\n"
"}\n" \
"")
        self.Add_button.setObjectName("Add_button")
        self.horizontalLayout.addWidget(self.Add_button)
        self.Add_button.setEnabled(False)
        self.Remove_button = QtWidgets.QPushButton(self.centralwidget)
        self.Remove_button.setStyleSheet("QPushButton {\n"
"    background-color: rgb(111, 192, 195);\n"
"    color: white;\n"
"}\n"
"QPushButton:disabled {"
"    background-color: rgb(180, 180, 180);  "
"    color: rgb(220, 220, 220);             "
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 173, 173);\n"
"}\n" \
"")
        self.Remove_button.setObjectName("Remove_button")
        self.horizontalLayout.addWidget(self.Remove_button)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.Remove_button.setEnabled(False)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setStyleSheet("QPushButton {\n"
"    background-color: rgb(111, 192, 195);\n"
"    color: white;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 173, 173);\n"
"}")
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout.addWidget(self.pushButton_4)
        self.Cancel_Button = QtWidgets.QPushButton(self.centralwidget)
        self.Cancel_Button.setStyleSheet("QPushButton {\n"
"    background-color: rgb(111, 192, 195);\n"
"    color: white;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: rgb(100, 173, 173);\n"
"}")
        self.Cancel_Button.setObjectName("Cancel_Button")
        self.horizontalLayout.addWidget(self.Cancel_Button)
        self.gridLayout_2.addLayout(self.horizontalLayout, 3, 0, 1, 2)
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget.setStyleSheet("background-color: white;")
        self.listWidget.setObjectName("listWidget")
        self.gridLayout_2.addWidget(self.listWidget, 2, 0, 1, 1)
        self.listWidget_2 = QtWidgets.QListWidget(self.centralwidget)
        self.listWidget_2.setStyleSheet("background-color: white;")
        self.listWidget_2.setObjectName("listWidget_2")
        self.gridLayout_2.addWidget(self.listWidget_2, 2, 1, 1, 1)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setStyleSheet("color: rgb(74, 130, 131);\n"
"font: 75 15pt \"MS Shell Dlg 2\";")
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label, 0, QtCore.Qt.AlignHCenter)
        self.gridLayout_2.addLayout(self.verticalLayout, 1, 1, 1, 1)
        searchfood.setLayout(self.gridLayout_2)

        self.searchitem()
        self.pushButton.clicked.connect(self.searchitem)
        self.listWidget.itemSelectionChanged.connect(self.updateAddbutton)
        self.listWidget_2.itemSelectionChanged.connect(self.updateRemovebutton)
        self.pushButton_4.clicked.connect(self.confirm_clicked)
        self.Add_button.clicked.connect(lambda: self.open_qty_dialog(False))
        self.Remove_button.clicked.connect(lambda: self.open_qty_dialog(True))

        self.retranslateUi(searchfood)
        self.Cancel_Button.clicked.connect(searchfood.close)
        QtCore.QMetaObject.connectSlotsByName(searchfood)

    def refresh_list2(self):
         self.listWidget_2.clear()  # kosongkan dulu list
         for food, qty in self.picked_item.items():
                self.listWidget_2.addItem(f"{food} - {qty} gram")

    def update_picked(self, data, name, delta):
        data[name] = data.get(name, 0) + delta
        if data[name] <= 0:
                del data[name]
        self.refresh_list2()


        
    def searchitem(self):
        keyword = self.lineEdit.text()
        query = "SELECT name FROM nutrisi WHERE name LIKE ?"
        self.cursor.execute(query, ('%' + keyword + '%',))
        results = self.cursor.fetchall()
        self.listWidget.clear()
        for row in results:
                self.listWidget.addItem(row[0])

    def updateAddbutton(self):
        self.Add_button.setEnabled(len(self.listWidget.selectedItems()) > 0)

    def updateRemovebutton(self):
        self.Remove_button.setEnabled(len(self.listWidget_2.selectedItems()) > 0)

    def open_qty_dialog(self, isRemove):
        parent_dialog = self.centralwidget.parent() 
        dialog = QtyDialog(parent_dialog)
        if dialog.exec_() == QtWidgets.QDialog.Accepted:
                value = -dialog.getValue() if isRemove else dialog.getValue()
                food_name = self.listWidget.currentItem().text()
                self.update_picked(self.picked_item,food_name,value)

    def get_food_id(self, name):
        cursor = self.conn.cursor()
        cursor.execute("SELECT id FROM nutrisi WHERE name = ?", (name,))
        result = cursor.fetchone()
        if result:
                return result[0]  # ambil id
        else:
                return None



    def add_meal_log(self, name, grams):
        food_id = self.get_food_id(name)
        log_date = date.today().isoformat()
        if food_id is None:
                print(f"Food '{name}' tidak ditemukan di database.")
                return
        self.cursor = self.conn.cursor()
        self.cursor.execute("""
            INSERT INTO meal_log (food_id, grams, date)
            VALUES (?, ?, ?)
        """, (food_id, grams, log_date))
        self.conn.commit()

    def confirm_clicked(self):
        for name,qty in self.picked_item.items():
             self.add_meal_log(name,qty)
        searchfood.close()
                


    def retranslateUi(self, searchfood):
        _translate = QtCore.QCoreApplication.translate
        searchfood.setWindowTitle(_translate("Searchfood", "Search Food"))
        self.pushButton.setText(_translate("searchfood", "Search"))
        self.Add_button.setText(_translate("searchfood", "Add"))
        self.Remove_button.setText(_translate("searchfood", "Remove"))
        self.pushButton_4.setText(_translate("searchfood", "Confirm"))
        self.Cancel_Button.setText(_translate("searchfood", "Cancel"))
        self.label.setText(_translate("searchfood", "Your Meal:"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    searchfood = QtWidgets.QDialog()
    ui = Ui_searchfood()
    ui.setupUi(searchfood)
    searchfood.show()
    sys.exit(app.exec_())
